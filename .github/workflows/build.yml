name: Build the latest stable V8
on:
  push:
    branches:
      - main
jobs:
  commit:
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest stable V8 commit
        run: |
          export PATH=$(pwd)/depot_tools:$PATH
          export V8_MINOR_VERSION=$(curl -sSL 'https://omahaproxy.appspot.com/all.json?os=linux&channel=stable' | jq -r '.[0].versions[0].v8_version | match("\\d+\\.\\d+").string')
          export COMMIT=$(git ls-remote -q https://chromium.googlesource.com/v8/v8.git refs/branch-heads/$V8_MINOR_VERSION | awk '{ print $1 }')
          echo $COMMIT | tee .commit
      - name: Upload .commit
        uses: actions/upload-artifact@v2
        with:
          name: commit
          path: .commit
          retention-days: 1
  include:
    runs-on: ubuntu-latest
    needs: commit
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Get commit
        uses: actions/download-artifact@v2
        with:
          name: commit
      - name: Fetch include files
        run: |
          COMMIT=`cat .commit` ./fetch.sh
      - name: Upload include files
        uses: actions/upload-artifact@v2
        with:
          name: include
          path: v8/v8/include
          retention-days: 1

  # build:
  #   strategy:
  #     matrix:
  #       platform: [ubuntu-latest, macos-latest]
  #   runs-on: ${{ matrix.platform }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive
  #     - name: Install build deps
  #       if: matrix.platform == 'ubuntu-latest'
  #       run: sudo apt update && sudo apt remove php7.4-common && sudo apt autoremove && ./v8/v8/build/install-build-deps.sh
  #     - name: Build V8
  #       run: ./build.sh
  #     - name: Copy static library
  #       if: matrix.platform == 'ubuntu-latest'
  #       run: mkdir v8/build/linux && cp -r v8/v8/out.gn/x64.release.sample/obj/libv8_monolith.a v8/build/linux/libv8.a
  #     - name: Copy static library
  #       if: matrix.platform == 'macos-latest'
  #       run: mkdir v8/build/darwin && cp -r v8/v8/out.gn/x64.release.sample/obj/libv8_monolith.a v8/build/darwin/libv8.a
  #     - name: Push to release
  #       uses: JamesIves/github-pages-deploy-action@4.1.4
  #       with:
  #         branch: release
  #         folder: v8/build
